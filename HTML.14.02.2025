/* HTML (Struktur der Seite)/*

<!DOCTYPE html>
<html lang="de">
<head>
    <!-- Metadaten der Seite -->
    <meta charset="UTF-8"> <!-- Zeichensatz der Seite -->
    <meta name="viewport" content="width=device-width, initial-scale=1.0"> <!-- Optimierung f√ºr mobile Ger√§te -->
    <title>Login & Personenliste</title> <!-- Titel der Seite -->

    <style>
        /* CSS f√ºr das Styling der Seite */
    </style>
</head>
<body>

<div class="container">
    <!-- Hauptcontainer f√ºr die Seite -->
    <h1>Login & Personenverwaltung</h1> <!-- √úberschrift der Seite -->

    <!-- Login-Bereich -->
    <div class="login-section" id="loginSection">
        <h2>Login</h2> <!-- Unter√ºberschrift -->
        <input type="text" id="username" placeholder="Benutzername"> <!-- Eingabefeld f√ºr Benutzername -->
        <input type="password" id="password" placeholder="Passwort"> <!-- Eingabefeld f√ºr Passwort -->
        <button class="button" onclick="login()">Einloggen</button> <!-- Login-Button mit Klick-Event -->
    </div>

    <!-- Formular f√ºr Mitarbeiter -->
    <div class="form-section" id="employeeForm" style="display: none;">
        <!-- Dieses Formular wird nur angezeigt, wenn ein Mitarbeiter eingeloggt ist -->
        <h2>Neuen Kunden hinzuf√ºgen (Mitarbeiter)</h2>
        <input type="text" id="customerFirstName" placeholder="Vorname"> <!-- Vorname des Kunden -->
        <input type="text" id="customerLastName" placeholder="Nachname"> <!-- Nachname des Kunden -->
        <input type="text" id="customerAddress" placeholder="Adresse"> <!-- Adresse des Kunden -->
        <input type="text" id="customerEmail" placeholder="E-Mail"> <!-- E-Mail des Kunden -->
        <button class="button" onclick="addCustomer()">Kunden hinzuf√ºgen</button> <!-- Button zum Hinzuf√ºgen eines Kunden -->
    </div>

    <!-- Formular f√ºr Admin -->
    <div class="form-section" id="adminForm" style="display: none;">
        <!-- Dieses Formular wird nur angezeigt, wenn ein Admin eingeloggt ist -->
        <h2>Neuen Mitarbeiter hinzuf√ºgen (Admin)</h2>
        <input type="text" id="employeeFirstName" placeholder="Vorname"> <!-- Vorname des Mitarbeiters -->
        <input type="text" id="employeeLastName" placeholder="Nachname"> <!-- Nachname des Mitarbeiters -->
        <input type="text" id="employeeAddress" placeholder="Adresse"> <!-- Adresse des Mitarbeiters -->
        <input type="text" id="employeeEmail" placeholder="E-Mail"> <!-- E-Mail des Mitarbeiters -->
        <button class="button" onclick="addEmployee()">Mitarbeiter hinzuf√ºgen</button> <!-- Button zum Hinzuf√ºgen eines Mitarbeiters -->
    </div>

    <!-- Tabellenbereich -->
    <div class="table-section" id="dataTables" style="display: none;">
        <!-- Dieser Bereich zeigt die Personenliste -->
        <h2>Personenliste</h2>
        <table id="personTable">
            <!-- Tabelle f√ºr die Personen -->
            <thead>
            <tr>
                <th>ID</th> <!-- Spalte f√ºr die ID -->
                <th>Vorname</th> <!-- Spalte f√ºr den Vornamen -->
                <th>Nachname</th> <!-- Spalte f√ºr den Nachnamen -->
                <th>Adresse</th> <!-- Spalte f√ºr die Adresse -->
                <th>E-Mail</th> <!-- Spalte f√ºr die E-Mail -->
                <th>Typ</th> <!-- Spalte f√ºr den Typ (Kunde oder Mitarbeiter) -->
                <th>Aktionen</th> <!-- Spalte f√ºr Aktionen (z. B. L√∂schen) -->
            </tr>
            </thead>
            <tbody>
            </tbody>
        </table>

        <!-- Buttons f√ºr Drucken und PDF -->
        <div class="button-container">
            <button class="button" onclick="printPage()">Drucken</button> <!-- Button zum Drucken der Tabelle -->
            <button class="button" onclick="downloadPDF()">Als PDF herunterladen</button> <!-- Button zum PDF-Download -->
        </div>
    </div>
</div>

<!-- Einbindung externer JavaScript-Bibliotheken -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.4.0/jspdf.umd.min.js"></script> <!-- jsPDF-Bibliothek -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.25/jspdf.plugin.autotable.min.js"></script> <!-- Erweiterung f√ºr Tabellen in jsPDF -->

<script>
    /* JavaScript f√ºr die Funktionalit√§t */
</script>

</body>
</html>


/*CSS (Styling der Seite) */

/* Styling f√ºr den Hintergrund und die Schrift */
body {
    font-family: Arial, sans-serif; /* Schriftart */
    margin: 0;
    padding: 20px;
    background: linear-gradient(to right, #f8b5c4, #b5f8da); /* Farbverlauf im Hintergrund */
    color: #333; /* Textfarbe */
}

/* Styling f√ºr den Hauptcontainer */
.container {
    max-width: 1200px; /* Maximale Breite */
    margin: auto; /* Zentrierung */
    padding: 20px;
    background: #fff; /* Wei√üer Hintergrund */
    border-radius: 10px; /* Abgerundete Ecken */
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3); /* Schatteneffekt */
}

/* Styling f√ºr √úberschriften */
h1, h2 {
    text-align: center; /* Zentrierte √úberschriften */
    color: #444; /* Dunkelgraue Farbe */
}

/* Styling f√ºr Buttons */
.button {
    background-color: #007BFF; /* Blaue Hintergrundfarbe */
    color: #fff; /* Wei√üe Schrift */
    border: none;
    padding: 10px 15px;
    cursor: pointer; /* Zeiger bei Hover */
    border-radius: 5px; /* Abgerundete Ecken */
    margin-top: 10px;
    width: 100%;
    font-size: 1em;
}

.button:hover {
    background-color: #0056b3; /* Dunkleres Blau bei Hover */
}

/* Styling f√ºr die Tabelle */
table {
    width: 100%; /* Tabelle nimmt die gesamte Breite ein */
    border-collapse: collapse; /* Entfernt doppelte Rahmen */
    margin-bottom: 20px;
}

table th, table td {
    border: 1px solid #ccc; /* Rahmen um Zellen */
    padding: 10px; /* Abstand innerhalb der Zellen */
    text-align: left; /* Text linksb√ºndig */
}

table th {
    background-color: #f0f0f0; /* Hellgrauer Hintergrund f√ºr die Kopfzeile */
}

/* JavaScript (Funktionalit√§t) /*
let persons = []; // Array, das alle Personen speichert
let personId = 1; // Automatisch generierte ID
let currentUserRole = null; // Rolle des aktuellen Benutzers (Admin oder Mitarbeiter)

/* Funktion f√ºr den Login */
function login() {
    const username = document.getElementById('username').value; // Benutzername aus Eingabefeld
    const password = document.getElementById('password').value; // Passwort aus Eingabefeld

    if (username === 'admin' && password === 'admin123') {
        currentUserRole = 'admin'; // Rolle wird auf Admin gesetzt
        alert('Admin erfolgreich eingeloggt!');
        document.getElementById('loginSection').style.display = 'none'; // Login-Bereich ausblenden
        document.getElementById('adminForm').style.display = 'block'; // Admin-Formular anzeigen
        document.getElementById('dataTables').style.display = 'block'; // Tabelle anzeigen
    } else if (username === 'mitarbeiter' && password === 'mitarbeiter123') {
        currentUserRole = 'mitarbeiter'; // Rolle wird auf Mitarbeiter gesetzt
        alert('Mitarbeiter erfolgreich eingeloggt!');
        document.getElementById('loginSection').style.display = 'none'; // Login-Bereich ausblenden
        document.getElementById('employeeForm').style.display = 'block'; // Mitarbeiter-Formular anzeigen
        document.getElementById('dataTables').style.display = 'block'; // Tabelle anzeigen
    } else {
        alert('Ung√ºltige Anmeldedaten!'); // Fehlermeldung bei falschen Daten
    }
}

/* Funktion zum Hinzuf√ºgen eines Mitarbeiters */
function addEmployee() {
    if (currentUserRole !== 'admin') {
        alert('Nur Admins k√∂nnen Mitarbeiter hinzuf√ºgen!');
        return;
    }
    // Daten aus den Eingabefeldern holen
    const firstName = document.getElementById('employeeFirstName').value;
    const lastName = document.getElementById('employeeLastName').value;
    const address = document.getElementById('employeeAddress').value;
    const email = document.getElementById('employeeEmail').value;

    if (firstName && lastName && address && email) {
        // Mitarbeiter zur Liste hinzuf√ºgen
        persons.push({ id: personId++, firstName, lastName, address, email, type: 'Mitarbeiter' });
        renderPersons(); // Tabelle aktualisieren
    } else {
        alert('Bitte alle Felder ausf√ºllen!');
    }
}

/* Funktion zum Rendern der Tabelle */
function renderPersons() {
    const tableBody = document.getElementById('personTable').querySelector('tbody');
    tableBody.innerHTML = ''; // Tabelle leeren
    persons.forEach(person => {
        const row = document.createElement('tr'); // Neue Zeile erstellen
        row.innerHTML = `
            <td>${person.id}</td>
            <td>${person.firstName}</td>
            <td>${person.lastName}</td>
            <td>${person.address}</td>
            <td>${person.email}</td>
            <td>${person.type}</td>
            <td>
                <span class="delete-btn" onclick="deletePerson(${person.id})">üóëÔ∏è L√∂schen</span>
            </td>
        `;
        tableBody.appendChild(row); // Zeile zur Tabelle hinzuf√ºgen
    });
}
